name: CI

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-alpha*
      - v[0-9]+.[0-9]+.[0-9]+-beta*

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Set build mode
        id: build-mode
        run: |
          BUILD_MODE='release'
          if [[ "${GITHUB_REF}" =~ ^refs\/tags\/v* ]]; then
              BUILD_MODE='release'
          elif [[ "${GITHUB_REF}" =~ ^refs\/heads\/main ]]; then
              BUILD_MODE='release'
          fi
          echo "Build mode: ${BUILD_MODE}"
          echo "BUILD_MODE=${BUILD_MODE}" >> $GITHUB_ENV

      - name: Generate version string
        if: startsWith(github.ref, 'refs/tags/v')
        id: version-string
        run: echo "VERSION_STR=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.24.4"

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --$BUILD_MODE

      - name: Build Android App Bundle
        if: startsWith(github.ref, 'refs/tags/v')
        run: flutter build appbundle --$BUILD_MODE

      - name: Rename APK with version string
        if: startsWith(github.ref, 'refs/tags/v')
        run: mv build/app/outputs/apk/$BUILD_MODE/app-$BUILD_MODE.apk build/app/outputs/apk/$BUILD_MODE/app-$BUILD_MODE-$VERSION_STR.apk

      - name: Rename App Bundle with version string
        if: startsWith(github.ref, 'refs/tags/v')
        run: mv build/app/outputs/bundle/$BUILD_MODE/app-$BUILD_MODE.aab build/app/outputs/bundle/$BUILD_MODE/app-$BUILD_MODE-$VERSION_STR.aab

      - name: Upload Android release artifacts
        if: ${{ env.BUILD_MODE == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: android_release
          path: "build/app/outputs/apk/release"

      - name: Upload Android App Bundle artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: android_appbundle
          path: "build/app/outputs/bundle/release"

      - name: Upload Android debug artifacts
        if: ${{ env.BUILD_MODE == 'debug' }}
        uses: actions/upload-artifact@v4
        with:
          name: android_debug
          path: "build/app/outputs/apk/debug"

  release:
    name: Release APK
    runs-on: ubuntu-20.04
    needs: build
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Generate version string
        id: version-string
        run: echo "VERSION_STR=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create a Release APK and AAB
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "android_release/*.apk,android_appbundle/*.aab"
          name: Release ${{ env.VERSION_STR }}
          prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') }}
          tag: ${{ env.VERSION_STR }}
          token: ${{ secrets.GITHUB_TOKEN }}